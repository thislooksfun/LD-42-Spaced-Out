{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/class/person.js","src/class/ship.js","src/game.js","src/lib/attributes.js","src/lib/util.js","src/main.js","src/section/bank.js","src/section/launchpads.js","src/section/lobby.js","src/section/score.js","src/section/spaceOnEarth.js"],"names":[],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\n\nconst attributes = require(\"../lib/attributes\");\nconst util = require(\"../lib/util\");\nconst diffScale = require(\"../section/score\").diffScale;\n\n\nconst maxAttributes = 5;\n\nconst moneyScale = 10;\nconst payoutMin  = 500;\nconst fineMin    = 50;\nconst bonusMin   = 25;\n\n\nfunction dragStart(e, id) {\n  $(this).addClass(\"dragging\");\n  \n  let dt = e.originalEvent.dataTransfer;\n  dt.effectAllowed = \"move\";\n  dt.setData(\"text/plain\", id);\n}\n\nfunction dragEnd() {\n  let $el = $(this);\n  $el.removeClass(\"dragging\");\n  $(\".launchpad\").removeClass(\"dragged-over\");\n  \n  if ($el.data(\"removeOnDragEnd\")) {\n    $el.off(\"dragstart\");\n    $el.off(\"dragend\");\n    $el.removeAttr(\"draggable\");\n  }\n}\n\n\nmodule.exports = class Person {\n  \n  constructor() {\n    this.id = util.uuidv4();\n    \n    let scaledAttrMax = Math.floor(1 + ((maxAttributes - 1) * diffScale()));\n    let max = Math.min(scaledAttrMax, maxAttributes);\n    \n    this.needs   = attributes.random(util.rand(max));\n    this.desires = attributes.random(util.rand(max), this.needs.unused);\n    this.inShip  = false;\n    \n    \n    // Subtract one so that the max is `payoutMin + (payoutMin * (moneyScale-1)) = payoutMin * moneyScale`\n    // rather than `payoutMin + (payoutMin * moneyScale)`\n    let ms = moneyScale - 1;\n    this.payout = payoutMin + util.rand(Math.floor(ms * payoutMin * this.needs.length   / maxAttributes));\n    this.fine   = payoutMin + util.rand(Math.floor(ms * fineMin   * this.needs.length   / maxAttributes));\n    this.bonus  = payoutMin + util.rand(Math.floor(ms * bonusMin  * this.desires.length / maxAttributes));\n    \n    \n    this.$el = $(\"<div>\", { class: \"person\" });\n  }\n  \n  setupDragging() {\n    let id = this.id;\n    this.$el.on(\"dragstart\", function(e) {\n      dragStart.call(this, e, id);\n    });\n    this.$el.on(\"dragend\", dragEnd);\n    this.$el.attr(\"draggable\", true);\n  }\n  \n  toHTML() {\n    this.$el.empty();\n    \n    \n    /** Needs **/\n    \n    let $needs = $(\"<div>\", {\n      class: \"needs\",\n    });\n    $needs.append($(\"<span>\", { text: \"Needs\" }));\n    let $needsList = $(\"<div>\", { class: \"icon-list\" });\n    for (let req of this.needs) {\n      $needsList.append(attributes.buildElFrom(req));\n    }\n    $needs.append($needsList);\n    \n    let $fine = $(\"<div>\", { class: \"fine\" });\n    $fine.append($(\"<span>\", { text: \"Fine:\"}));\n    let $fineTxt = $(\"<span>\", { class: \"price cost\", text: \"-$\" + (util.prettyPrint(this.fine)) + \"/item\" });\n    if (this.needs.length === 0) {\n      $fine.addClass(\"na\");\n      $fineTxt.text(\"N/A\");\n    }\n    $fine.append($fineTxt);\n    $needs.append($fine);\n    \n    this.$el.append($needs);\n    \n    \n    \n    /** Desires **/\n    \n    let $desires = $(\"<div>\", {\n      class: \"desires\",\n    });\n    $desires.append($(\"<span>\", { text: \"Desires\" }));\n    let $desiresList = $(\"<div>\", { class: \"icon-list\" });\n    for (let des of this.desires) {\n      $desiresList.append(attributes.buildElFrom(des));\n    }\n    $desires.append($desiresList);\n    \n    let $bonus = $(\"<div>\", { class: \"bonus\" });\n    $bonus.append($(\"<span>\", { text: \"Bonus:\"}));\n    let $bonusTxt = $(\"<span>\", { class: \"price earn\", text: \"+$\" + (util.prettyPrint(this.bonus)) + \"/item\" });\n    if (this.desires.length === 0) {\n      $bonus.addClass(\"na\");\n      $bonusTxt.text(\"N/A\");\n    }\n    $bonus.append($bonusTxt);\n    $desires.append($bonus);\n    \n    this.$el.append($desires);\n    \n    \n    \n    /** Face + ticket price **/\n    \n    let $bottom = $(\"<div>\", {\n      class: \"face-and-ticket\",\n    });\n    \n    let $face = $(\"<img>\", {\n      src: \"assets/img/person.png\",\n      alt: \"face\",\n      class: \"icon face\",\n    });\n    $bottom.append($face);\n    \n    let $ticket = $(\"<div>\", {\n      class: \"ticket\"\n    });\n    let $ticketInner = $(\"<span>\", { text: \"Ticket: \" });\n    $ticketInner.append($(\"<span>\", { class: \"price earn\", text: \"+$\" + (util.prettyPrint(this.payout)) }));\n    $ticket.append($ticketInner);\n    $bottom.append($ticket);\n    \n    this.$el.append($bottom);\n    \n    \n    return this.$el;\n  }\n};","\"use strict\";\n\nconst attributes = require(\"../lib/attributes\");\nconst bank = require(\"../section/bank\");\nconst lobby = require(\"../section/lobby\");\nconst score = require(\"../section/score\");\n\nconst maxAttributes = 5;\nconst maxPassengers = 5;\n\n\nfunction dragOver(ev) {\n  let e = ev.originalEvent;\n  if (typeof e.preventDefault === \"function\") {\n    e.preventDefault();\n  }\n  \n  e.dataTransfer.dropEffect = \"move\";\n}\n\nfunction dragEnter() {\n  $(this).addClass(\"dragged-over\");\n}\n\nfunction dragLeave() {\n  $(this).removeClass(\"dragged-over\");\n}\n\n\nmodule.exports = class Person {\n  \n  constructor(pad, redrawPad) {\n    this.attributes = attributes.random(1);\n    this.passengers = [];\n    \n    this._pad = pad;\n    this._redrawPad = redrawPad;\n    \n    this.$el = $(\"<div>\", {\n      class: \"ship\"\n    });\n  }\n  \n  addPassenger(person) {\n    if (this.passengers.length >= maxPassengers) { return false; }\n    this.passengers.push(person);\n    person.inShip = true;\n    bank.earn(person.payout);\n    \n    if (this.passengers.length >= maxPassengers) {\n      console.log(\"Full!\");\n      this.clearDragTarget();\n    }\n    \n    this.redrawCapacity();\n    this.$launchBtn.removeAttr(\"disabled\");\n    \n    return true;\n  }\n  \n  setupDragTarget() {\n    this.$el.on(\"dragover\",  dragOver);\n    this.$el.on(\"dragenter\", dragEnter);\n    this.$el.on(\"dragleave\", dragLeave);\n    \n    let _this = this;\n    this.$el.on(\"drop\", function(ev) {\n      let e = ev.originalEvent;\n      if(e.preventDefault) { e.preventDefault(); }\n      if(e.stopPropagation) { e.stopPropagation(); }\n      \n      $(\".dragged-over\").removeClass(\"dragged-over\");\n      \n      let id = e.dataTransfer.getData(\"text/plain\");\n      let passenger = lobby.get(id);\n      \n      if (!_this.addPassenger(passenger)) {\n        // Can't add passenger, probably full\n        return;\n      }\n      \n      lobby.remove(id);\n      \n      passenger.$el.data(\"removeOnDragEnd\", true);\n      passenger.$el.trigger(\"dragend\");\n      \n      // TODO: Only redraw \"content\", not everything.\n      _this.redrawContent();\n    });\n  }\n  \n  clearDragTarget() {\n    console.log(\"Clearing drag targets...\", this.$el);\n    this.$el.off(\"dragover\");\n    this.$el.off(\"dragenter\");\n    this.$el.off(\"dragleave\");\n    this.$el.off(\"drop\");\n  }\n  \n  toHTML() {\n    this.$el.empty();\n    \n    \n    this.$attributes = $(\"<div>\", {class: \"attributes\"});\n    this.redrawAttributes();\n    this.$el.append(this.$attributes);\n    \n    \n    this.$content = $(\"<div>\", {class: \"content\"});\n    this.redrawContent();\n    this.$el.append(this.$content);\n    \n    this.$el.append($(\"<div>\", {class: \"fade down\"}));\n    this.$el.append($(\"<div>\", {class: \"fade up\"}));\n    \n    this.$launchBtn = $(\"<button>\", {class: \"launch\", text: \"Launch!\"});\n    this.$launchBtn.click(this.launch.bind(this));\n    \n    if (this.passengers.length == 0) {\n      this.$launchBtn.prop(\"disabled\", true);\n    }\n    \n    this.$el.append(this.$launchBtn);\n    \n    this.$capacity = $(\"<span>\", {class: \"capacity\", text: \"??/??\"});\n    this.$el.append(this.$capacity);\n    this.redrawCapacity();\n    \n    return this.$el;\n  }\n  \n  redrawAttributes(paletteOpen = false) {\n    this.$attributes.empty();\n    \n    this.$attributes.append($(\"<span>\", {class: \"desc\", text: \"Target planet attributes: \"}));\n    \n    let $list = $(\"<div>\", {class: \"attr-list\"});\n    for (let a of this.attributes) {\n      let $container = $(\"<div>\", {class: \"attr-container\"});\n      $container.append(attributes.buildElFrom(a));\n      $list.append($container);\n    }\n    for (var i = 0; i < maxAttributes - this.attributes.length; i++) {\n      $list.append($(\"<div>\", {class: \"attr-container\"}));\n    }\n    this.$attributes.append($list);\n    \n    let $addBtn = $(\"<button>\", {class: \"add\", text: \"Add\"});\n    $addBtn.click(this.displayPalette.bind(this));\n    \n    if (paletteOpen) {\n      this.displayPalette();\n    }\n    \n    this.$attributes.append($addBtn);\n  }\n  \n  displayPalette() {\n    let _this = this;\n    let $pal = attributes.buildPalette(this.attributes, function(name) {\n      console.log(\"Clicked on attribute\", name);\n      _this.attributes.push(name);\n      _this.redrawAttributes(true);\n    });\n    this.$attributes.append($pal);\n  }\n  \n  redrawCapacity() {\n    this.$capacity.text(this.passengers.length + \"/\" + maxPassengers);\n  }\n  \n  redrawContent() {\n    // TODO: Redraw just the 'content' div\n    this.$content.empty();\n    \n    for (let p of this.passengers) {\n      this.$content.append(p.toHTML());\n    }\n    for (var i = 0; i < maxPassengers - this.passengers.length; i++) {\n      this.$content.append($(\"<div>\", {class: \"slot empty\"}));\n    }\n  }\n  \n  hasAttr(a) {\n    for (let at of this.attributes) {\n      if (at === a) {\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  launch() {\n    console.log(\"Launching ship!\", this);\n    \n    var bonuses = 0;\n    var fines = 0;\n    \n    for (let p of this.passengers) {\n      for (let d of p.desires) {\n        if (this.hasAttr(d)) {\n          bonuses += p.bonus;\n        }\n      }\n      \n      for (let n of p.needs) {\n        if (!this.hasAttr(n)) {\n          fines += p.fine;\n        }\n      }\n    }\n    \n    // Process bonuses first just in case the fines would put the balance below zero.\n    // For example: say the balance is $300, and we need to process $400 in fines and $700 in bonuses.\n    // If we process the fines first, the balance would go to -$100, and the game would end before the +$700\n    // in bonuses is added.\n    // This way around we only trigger the end-game condition if the final sum is invalid.\n    bank.earn(bonuses);\n    bank.spend(fines);\n    \n    score.save(this.passengers.length);\n    \n    this._pad.ship = null;\n    this._redrawPad();\n  }\n  \n};","\"use strict\";\n\nvar sections = [\n  require(\"./section/bank\"),\n  require(\"./section/launchpads\"),\n  require(\"./section/lobby\"),\n  require(\"./section/score\"),\n  require(\"./section/spaceOnEarth\"),\n  // TODO: More sections here\n];\n\n\nfunction setup() {\n  for (let s of sections) {\n    if (typeof s.setup === \"function\") {\n      s.setup();\n    }\n  }\n}\n\nfunction start() {\n  for (let s of sections) {\n    if (typeof s.start === \"function\") {\n      s.start();\n    }\n  }\n}\n\n\nmodule.exports = {\n  begin() {\n    setup();\n    start();\n  },\n  \n  end(reason) {\n    console.log(\"Ending game -- reason: \" + reason);\n    for (let s of sections) {\n      if (typeof s.teardown === \"function\") {\n        s.teardown();\n      }\n    }\n    \n    // TODO: Display end-of-game screen\n  }\n};","\"use strict\";\n\nconst utils = require(\"./util\");\n\nconst assetBasePath = \"assets/attributes/icons/\";\nconst ext = \".png\";\n\nmodule.exports = {\n  random(count = 5, list = null) {\n    var out = [];\n    if (list == null) {\n      // Make a copy of the array\n      list = this.groups.slice(this.groups);\n    }\n    \n    while (count > 0 && list.length > 0) {\n      let index = utils.rand(list.length - 1);\n      let entry = list[index];\n      let opt = entry.opts[utils.rand(entry.opts.length - 1)];\n      out.push(entry.name + \".\" + opt);\n      list.splice(index, 1);\n      count--;\n    }\n    \n    out.unused = list;\n    return out;\n  },\n  \n  buildPalette(currentAttrs, onSelect) {\n    // Make a copy of the array\n    var groups = this.groups.slice(this.groups);\n    \n    // Filter out any attrs that are already in the target list\n    for (let a of currentAttrs) {\n      let parts = a.split(\".\");\n      \n      var i = 0;\n      while (i < groups.length) {\n        if (groups[i].name === parts[0]) {\n          groups.splice(i, 1);\n          continue;\n        }\n        i++;\n      }\n    }\n    \n    \n    let $container = $(\"<div>\", {class: \"attr-select\"});\n    let $groups = $(\"<div>\", {class: \"groups\"});\n    for (let g of groups) {\n      let $group = $(\"<div>\", {class: \"group\"});\n      for (let o of g.opts) {\n        let name = g.name + \".\" + o;\n        let $opt = this.buildElFrom(name);\n        $opt.addClass(\"clickable\");\n        $opt.click(function() {\n          onSelect(name);\n        });\n        $group.append($opt);\n      }\n      $groups.append($group);\n    }\n    $container.append($groups);\n    \n    let $closeBtn = $(\"<button>\", {class: \"close\", text: \"Close\"});\n    $closeBtn.click(function() {\n      $container.remove();\n    });\n    $container.append($closeBtn);\n    \n    \n    return $container;\n  },\n  \n  groups: [\n    {name: \"cats\",        opts: [ \"none\" , \"some\"               ]},\n    // {name: \"clouds\",      opts: [ \"none\" , \"low\", \"med\", \"high\" ]}, // missing: none, med, high\n    {name: \"desert\",      opts: [ \"none\" , \"some\"               ]},\n    {name: \"grass\",       opts: [ \"none\" , \"low\", \"med\", \"high\" ]},\n    {name: \"moons\",       opts: [ \"none\" , \"one\", \"two\"         ]},\n    // {name: \"rain\",        opts: [ \"none\" , \"some\"               ]}, // missing: none, some\n    // {name: \"rings\",       opts: [ \"none\" , \"some\"               ]}, // missing: none\n    {name: \"size\",        opts: [ \"small\", \"large\"              ]},\n    // {name: \"snow\",        opts: [ \"none\" , \"some\"               ]}, // missing: none, some\n    // {name: \"storms\",      opts: [ \"none\" , \"some\"               ]}, // missing: none, some\n    // {name: \"temperature\", opts: [ \"cold\" , \"moderate\", \"hot\"    ]}, // mssing: moderate\n    // {name: \"trees\",       opts: [ \"none\" , \"some\"               ]}, // missing: none\n  ],\n  \n  buildElFrom(name) {\n    return $(\"<img>\", {\n      src: assetBasePath + name + ext,\n      alt: name,\n      title: name,  // Todo: try to prettify this?\n      class: \"icon attribute\",\n    });\n  },\n  \n};","\"use strict\";\n\nmodule.exports = {\n  rand(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  },\n  \n  uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n  },\n  \n  prettyPrint(num) {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  },\n};","\"use strict\";\n\n$(function() {\n  let start = Date.now();\n  global.runningTime = function() {\n    return Date.now() - start;\n  };\n  \n  // TODO: make a \"start\" button?\n  require(\"./game\").begin();\n});","\"use strict\";\n\nconst game = require(\"../game\");\nconst prettyPrint = require(\"../lib/util\").prettyPrint;\n\nconst startingMoney = 100000;\n\n\nvar money = -1;\nlet $balance = $(\"#balance\");\nfunction redraw() {\n  $balance.text(\"$\" + prettyPrint(money));\n}\n\nmodule.exports = {\n  \n  setup() {\n    money = startingMoney;\n    redraw();\n  },\n  \n  canSpend(amt) {\n    return money >= amt;\n  },\n  \n  spend(cost) {\n    if (cost < 0) {\n      return this.earn(-cost);\n    }\n    money -= cost;\n    if (money < 0) {\n      game.end(\"Out of money!\");\n    }\n    redraw();\n  },\n  \n  earn(amount) {\n    if (amount < 0) {\n      return this.spend(-amount);\n    }\n    money += amount;\n    redraw();\n  },\n};","\"use strict\";\n\nconst Ship = require(\"../class/ship\");\nconst prettyPrint = require(\"../lib/util\").prettyPrint;\nconst bank = require(\"./bank\");\n\n// const buildTimeInSeconds = 5;\n\nconst priceToBuildShip = 5000;\nconst priceToBuyPad = 10000;\n\n\nlet pad1 = { ship: null, bought: true,  $el: $(\"#pad1\"), $pad: $(\"#pad1 .pad\") };\nlet pad2 = { ship: null, bought: false, $el: $(\"#pad2\"), $pad: $(\"#pad2 .pad\") };\nlet pad3 = { ship: null, bought: false, $el: $(\"#pad3\"), $pad: $(\"#pad3 .pad\") };\n\n\nmodule.exports = {\n  \n  setup() {\n    // TODO: ?\n  },\n  \n  start() {\n    pad1.ship = new Ship(pad1, this.redraw.bind(this, pad1));\n    \n    this.redraw(pad1);\n    this.redraw(pad2);\n    this.redraw(pad3);\n  },\n  \n  // startBuild() {\n  //   if (this.ships.count < this.maxShips) {\n  //     this.ships.push(new Ship());\n  //   }\n  //   setTimeout(this.deliverShip.bind(this), buildTimeInSeconds * 1000);\n  //   console.log(\"Started building ship!\");\n  // },\n  \n  redraw(pad) {\n    pad.$pad.empty();\n    if (pad.ship != null) {\n      pad.$el.removeClass(\"locked empty\");\n      pad.$pad.append(pad.ship.toHTML());\n      pad.ship.setupDragTarget();\n    } else if (pad.bought) {\n      pad.$el.removeClass(\"locked\");\n      pad.$el.addClass(\"empty\");\n      \n      pad.$pad.append($(\"<h2>\", {text: \"Empty\"}));\n      let buildBtn = $(\"<button>\", {class: \"build\", text: \"Build ($\" + prettyPrint(priceToBuildShip) + \")\"});\n      let _this = this;\n      buildBtn.click(function() {\n        if (!bank.canSpend(priceToBuildShip)) {\n          // TODO: Visualize that it failed becaue of money\n          // Maybe flash balance?\n          return;\n        }\n        bank.spend(priceToBuildShip);\n        \n        pad.ship = new Ship(pad, _this.redraw.bind(_this, pad));\n        _this.redraw(pad);\n      });\n      pad.$pad.append(buildBtn);\n    } else {\n      pad.$el.removeClass(\"empty\");\n      pad.$el.addClass(\"locked\");\n      \n      pad.$pad.append($(\"<h2>\", {text: \"Locked\"}));\n      let buyBtn = $(\"<button>\", {class: \"unlock\", text: \"Unlock ($\" + prettyPrint(priceToBuyPad) + \")\"});\n      let _this = this;\n      buyBtn.click(function() {\n        if (!bank.canSpend(priceToBuyPad)) {\n          // TODO: Visualize that it failed becaue of money\n          // Maybe flash balance?\n          return;\n        }\n        bank.spend(priceToBuyPad);\n        \n        pad.bought = true;\n        _this.redraw(pad);\n      });\n      pad.$pad.append(buyBtn);\n    }\n  },\n\n  deliverShip() {\n    $(\".ship\").addClass(\"built\");\n    console.log(\"Ship has been delivered!\");\n  }\n};","\"use strict\";\n\nconst Person = require(\"../class/person\");\n\nconst numberOfPeople = 5;\n\nvar people = {};\n\nlet $lobby = $(\"#lobby .content\");\n\nmodule.exports = {\n  setup() {\n    // TODO\n  },\n  \n  start() {\n    for (var i = 0; i < numberOfPeople; i++) {\n      this.addNew();\n    }\n  },\n  \n  teardown() {\n    clearInterval(this._timer);\n  },\n  \n  addNew() {\n    let newPerson = new Person();\n    $lobby.append(newPerson.toHTML());\n    newPerson.setupDragging();\n    people[newPerson.id] = newPerson;\n  },\n  \n  // TODO: Call this when a person is dropped on a ship\n  get(id) {\n    return people[id];\n  },\n  \n  remove(id) {\n    let person = people[id];\n    delete people[id];\n    person.$el.detach();\n    \n    // Add a new person to replace the one we just removed\n    this.addNew();\n    \n    return person;\n  },\n  \n  refresh() {\n    $lobby.empty();\n    \n    for (let person of people) {\n      $lobby.append(person.toHTML());\n    }\n  },\n};","\"use strict\";\n\nconst prettyPrint = require(\"../lib/util\").prettyPrint;\nconst soe = require(\"./spaceOnEarth\");\n\n// How many people you have to save to get the hardest difficulty\nconst hardestDifficultyAt = 100;\n\nvar saved = -1;\nlet $saved = $(\"#saved\");\nfunction redraw() {\n  $saved.text(prettyPrint(saved) + \" \" + (saved === 1 ? \"person\" : \"people\"));\n}\n\nmodule.exports = {\n  \n  setup() {\n    saved = 0;\n    redraw();\n  },\n  \n  save(count) {\n    saved += count;\n    redraw();\n    \n    soe.add(count);\n  },\n  \n  // Starts at '0' (easiest), and goes to '1' (hardest) over the course of the game\n  diffScale() {\n    return Math.min(saved / hardestDifficultyAt, 1);\n  }\n  \n};","\"use strict\";\n\nconst secondsBetweenDecrement = 2;\nvar space = 100;\n// var space = 10;\n\nmodule.exports = {\n  \n  setup() {\n    // TODO\n  },\n  \n  start() {\n    this.redraw();\n    \n    this._timer = setInterval(this.decrement.bind(this), secondsBetweenDecrement * 1000);\n  },\n  \n  teardown() {\n    clearInterval(this._timer);\n  },\n  \n  decrement() {\n    space--;\n    \n    // TODO: Check for 'space' reaching 0, then end the game\n    if (space <= 0) {\n      require(\"../game\").end(\"Out of space!\");\n    }\n    \n    this.redraw();\n  },\n  \n  add(count) {\n    space += count;\n    this.redraw();\n  },\n  \n  redraw() {\n    $(\"#room-left\").text(space);\n  }\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}